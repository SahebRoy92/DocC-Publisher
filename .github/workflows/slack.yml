name: Slack Notification

on:
  push:
    branches: [main]
    paths:
      - 'DocCPublisherDemo/DocCPublisherDemo/*'

jobs:
  check-xcode-changes:
    runs-on: macos-latest
    env:
      FILES: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Get changed files
        id: changed_files
        run: |
          echo "Changed Files:"
          export FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '.swift' || true)
          echo "$FILES"

      - name: Extract class names
        id: extract_class_names
        run: |
          IFS=$'\n'
          files=($FILES)
          class_names=()

          for file in "${files[@]}"; do
            class_name=$(basename $file .swift)
            class_names+=("$class_name")
          done

          echo "Class Names: ${class_names[@]}"
          echo "::set-output name=class_names::${class_names[@]}"

      - name: Get changes for each file
        id: get_changes
        run: |
          class_names=${{ steps.extract_class_names.outputs.class_names }}
          changes=""

          for class_name in $class_names; do
            changes+="\nChanges in $class_name:\n"
            changes+=$(git diff --unified=0 ${{ github.event.before }} ${{ github.sha }} $FILES | grep -A 2 "class $class_name" || true)
          done

          echo "Changes:"
          echo "$changes"
          echo "::set-output name=changes::$changes"

      - name: Send message to Slack
        if: success()
        run: |
          class_names=${{ steps.extract_class_names.outputs.class_names }}
          changes=${{ steps.get_changes.outputs.changes }}

          for class_name in $class_names; do
            class_changes=$(echo "$changes" | sed -n "/Changes in $class_name:/,/Changes in/ p")
            curl -X POST -H 'Content-type: application/json' --data '{
              "text": "Code modified at: '${class_name}'\nChanges -\n'"$class_changes"'",
              "channel": "#ios-demos",
              "username": "GitHub Actions"
            }' ${{ secrets.SLACK_WEBHOOK_URL }}
          done
